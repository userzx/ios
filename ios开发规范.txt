好的规则带来优雅的代码，有规矩方成方圆。

ios开发规范（保持代码优雅的规则）：
	1.代码列数最大为100列
		可以自行在xcode里面进行配置。
		即：一行代码不能超过100个字符

	2.声明类或方法，注意空格、换行的使用
		声明类或方法时，注意空格的使用，参数过多时候可换行保持对齐（折行冒号对齐）
		调用方法时也是如此，参数都写在一行或者换行冒号对齐

	3.命名规则（驼峰式命名，骆驼的驼峰高低起伏）
		类（class）名首字母大写
		方法首字母小写（尽量让方法的命名读起来像一句话，能够传达方法的意思，
			      即：通过方法名称能一眼看出是该方法是做什么用的，
		              尽量对所有的参数进行有意义的命名，
			      取值的方法命名时候前面不要加前缀“get”）
		方法中的参数首字母小写
		变量的首字母使用小写字符
		常量以小写字母k开头，后续首指母大写（如：kYear）
		使用首字母大写的驼峰命名规则来命名枚举值
				enum Shape{
					case Rectangle
					case Square
				}

	4.注释
	 	注释非常非常非常重要，好记性不如烂笔头，
			一般就算是我们写的代码，等到1，2个月再回头看，
			自己都可能蒙圈了，所以一定要注释，注释，注释，重要的话在心里说三遍
		除了开头的版权声明，尽可能把代码写的如同文档一样，
			让别人直接看代码就知道意思，写代码时别担心名字太长，XCode有很好的提示功能

	5.尽可能保持.h文件的简洁性
		在类声明时候，可以不公开的API就不要公开，写在实现文件（.m）里面即可。
		.h只需要写外部需要调用的方法和外部需要访问的变量。

	6.#import 和 #include 使用
		Xcode 支持Objective-C/C/C++混编，所以引用头文件时：
		#import Objective-C/Objective-C++头文件 
			（Objective-C++是Objective-C与C++混编文件）
		#include C/C++头文件

	7.实例变量声明
		.h文件声明全局变量时候需要在变量名前面加下划线“_”，如:_romateService
		（作用：说明它是全局的变量，同时也是避免和系统变量冲突，也是避免和工程里面其他变量冲突）
		如果是局部变量不需要加下划线了。

	8.使用“#pragma mark”
		方便快速查找和定位到自己标注的标签。
		（自己感觉：实用性很强，当我们要在N多行代码里面去找到某个自己特别关注和留意的代码段时候，非常有用）
		
		
			
		
			